{"version":3,"sources":["Components/MainPage/New_task/index.module.css","Components/MainPage/TasksBlock/TaskHeader/index.module.css","Components/MainPage/TasksBlock/Task/index.module.css","Components/Login/index.module.css","Components/Header/index.module.css","Components/MainPage/TasksBlock/index.module.css","Components/MainPage/index.module.css","Components/MainPage/TasksBlock/Pagination/index.module.css","Components/MainPage/TasksBlock/PaginationBar/index.module.css","Components/Button/button.jsx","Redux/Types/types.js","Redux/ActionsCreator/actions.js","Components/Header/Header.jsx","Components/MainPage/New_task/New_task.jsx","Components/MainPage/TasksBlock/TaskHeader/TaskHeader.jsx","Components/MainPage/TasksBlock/Task/Task.jsx","Components/MainPage/TasksBlock/Pagination/Pagination.jsx","Components/MainPage/TasksBlock/PaginationBar/PaginationBar.jsx","Components/MainPage/TasksBlock/TasksBlock.jsx","Components/MainPage/MainPage.jsx","Components/Login/Login.jsx","App.js","Redux/initState.jsx","Redux/Reducers/Admin_statusReducer.js","Redux/Reducers/taskReduser.js","Redux/Reducers/addNewTaskReducer.js","Redux/Reducers/rootReducer.jsx","Redux/store.jsx","index.js"],"names":["module","exports","button","props","type","className","title","ADD_NEW_TASK","CHANGE_ADMIN_STATUS","ADD_NEW_TASK_CONTROLLER","addNewTask","data","TYPES","payload","saveAdminStatus","token","changeAdminStatus","dispatch","getState","a","logoutAdmin","localStorage","removeItem","changeTaskStatus","value","TaskID","setChangeStatus","formData","FormData","append","fetch","method","body","response","json","status","Date","alert","changeTaskText","Header","useDispatch","store","useSelector","state","Admin_status","styles","headerFlexParams","onClick","buttonSize","to","NewTask","useState","username","email","taskContent","inputs","setInputs","handleChange","target","name","Main","TaskBlock","onSubmit","event","preventDefault","result","message","id","newTaskInput","newClassLable","htmlFor","onChange","required","size","placeholder","cols","rows","ButtonSize","TaskHeader","setSort_direction","setSort_field","MainBlock","ElementBlockUsername","SortButtons","ElementBlockEmail","ElementBlockTask","ElementBlockStatus","ElementBlockStatusChange","Task","history","useHistory","textValue","text","slice","changeStatus","storageRedux","getItem","JSON","parse","push","changeText","Pagination","setPage","ElementBlock","role","PaginationBar","pageCounter","i","map","el","TasksBlock","page","sort_field","sort_direction","allPages","setAllPages","useEffect","console","log","Math","ceil","total_task_count","task","tasks","Tasks","MainPage","Login","password","App","exact","path","initialState","Admin_statusReducer","action","taskReduser","addNewTaskReducer","rootReducer","combineReducers","createStore","initState","composeWithDevTools","applyMiddleware","thunk","subscribe","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dbf56b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"New_task_Main__1jnxC\",\"TaskBlock\":\"New_task_TaskBlock__2zDMq\",\"ButtonSize\":\"New_task_ButtonSize__w2MS1\",\"newTaskInput\":\"New_task_newTaskInput__3NQal\",\"newClassLable\":\"New_task_newClassLable__2c6WF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainBlock\":\"TaskHeader_MainBlock__1Rx0o\",\"ElementBlockUsername\":\"TaskHeader_ElementBlockUsername__1WnjL\",\"ElementBlockEmail\":\"TaskHeader_ElementBlockEmail__2f2pr\",\"ElementBlockTask\":\"TaskHeader_ElementBlockTask__EslR6\",\"ElementBlockStatus\":\"TaskHeader_ElementBlockStatus__3gtEW\",\"ElementBlockStatusChange\":\"TaskHeader_ElementBlockStatusChange__1Gfuc\",\"SortButtons\":\"TaskHeader_SortButtons__2-nXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainBlock\":\"Task_MainBlock__1LL5Y\",\"ElementBlockUsername\":\"Task_ElementBlockUsername__27-v_\",\"ElementBlockEmail\":\"Task_ElementBlockEmail__18FZR\",\"ElementBlockTask\":\"Task_ElementBlockTask__3FCgZ\",\"ElementBlockStatus\":\"Task_ElementBlockStatus__vRhLt\",\"SortButtons\":\"Task_SortButtons__2g4z3\",\"ButtonSize\":\"Task_ButtonSize__29Lqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Login_Main__MClif\",\"TaskBlock\":\"Login_TaskBlock__wtZJM\",\"ButtonSize\":\"Login_ButtonSize__2g-l3\",\"newTaskInput\":\"Login_newTaskInput__3DWZj\",\"newClassLable\":\"Login_newClassLable__3uM77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerFlexParams\":\"Header_headerFlexParams__2DLVJ\",\"buttonSize\":\"Header_buttonSize__2KHRC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"TasksBlock_Main__2EzQ8\",\"TaskBlock\":\"TasksBlock_TaskBlock__3lTnX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainBlock\":\"MainPage_MainBlock__25CAM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainBlock\":\"Pagination_MainBlock__3EIVQ\",\"ElementBlock\":\"Pagination_ElementBlock__3utg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainBlock\":\"PaginationBar_MainBlock__xPs99\"};","const button = (props) => {\n  return (\n    <button type=\"button\" className=\"btn btn-outline-primary mx-3 w-100\">{props.title}</button>\n  );\n}\n\nexport default button;\n","export const ADD_NEW_TASK = \"ADD_NEW_TASK\"\nexport const CHANGE_ADMIN_STATUS = \"CHANGE_ADMIN_STATUS\"\nexport const ADD_NEW_TASK_CONTROLLER = \"ADD_NEW_TASK_CONTROLLER\"\n","\nimport * as TYPES from \"../Types/types\";\n\nexport const addNewTaskREducer = (data, counter) => async (dispatch, getState) => {\n  const { username, email, taskContent } = data\n  const formData = new FormData()\n  formData.append(\"email\", email)\n  formData.append(\"text\", taskContent)\n  formData.append(\"username\", username)\n  const response = await fetch('https://uxcandy.com/~shapoval/test-task-backend/v2/create?developer=PapakhinAV', {\n    method: 'POST',\n    body: formData\n  })\n  if (response.status === 200) {\n    const result = await response.json()\n    alert(\"The task was registered successfully\")\n    dispatch(addNewTask(`Last Task id - ${result.message.id}`))\n  }\n}\n\nexport const saveTask = (task) => ({\n  type: TYPES.ADD_NEW_TASK,\n  payload: task,\n})\n\nconst addNewTask = (data) => ({\n  type: TYPES.ADD_NEW_TASK_CONTROLLER,\n  payload: data,\n})\n\nconst saveAdminStatus = (token) => ({\n  type: TYPES.CHANGE_ADMIN_STATUS,\n  payload: token,\n})\n\n\nexport const changeAdminStatus = (token) => async (dispatch, getState) => {\n  dispatch(saveAdminStatus(token))\n}\n\nexport const logoutAdmin = (token) => async (dispatch, getState) => {\n  dispatch(saveAdminStatus(token))\n  localStorage.removeItem('redux')\n}\n\nexport const changeTaskStatus = (value, token, TaskID, setChangeStatus) => async (dispatch, getState) => {\n  try {\n    const formData = new FormData()\n    formData.append(\"status\", value)\n    formData.append(\"token\", token)\n    const response = await fetch(`https://uxcandy.com/~shapoval/test-task-backend/v2/edit/${TaskID}?developer=PapakhinAV`, {\n      method: 'POST',\n      body: formData\n    })\n    const result = await response.json()\n    if (result.status === \"ok\") {\n      return setChangeStatus(`Task ${TaskID} changed at ${new Date()}!`)\n    }\n  } catch (error) {\n    alert(error)\n  }\n}\n\nexport const changeTaskText = (value, token, TaskID, setChangeStatus) => async (dispatch, getState) => {\n  try {\n    const formData = new FormData()\n    formData.append(\"text\", `!@#Edited: ${value}`)\n    formData.append(\"token\", token)\n    const response = await fetch(`https://uxcandy.com/~shapoval/test-task-backend/v2/edit/${TaskID}?developer=PapakhinAV`, {\n      method: 'POST',\n      body: formData\n    })\n    const result = await response.json()\n    if (result.status === \"ok\") {\n      return setChangeStatus(`Task ${TaskID} changed at ${new Date()}!`)\n    }\n  } catch (error) {\n  }\n}\n","import styles from \"./index.module.css\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport HeaderButton from '../Button/button'\nimport { Link } from \"react-router-dom\";\nimport { logoutAdmin } from \"../../Redux/ActionsCreator/actions\"\nconst Header = () => {\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.Admin_status)\n  function logout() {\n    dispatch(logoutAdmin(false))\n  }\n  return (\n    <>\n      <div className={styles.headerFlexParams}>\n        {store ?\n          <div onClick={logout} className={styles.buttonSize}>\n            <HeaderButton title={\"Sign Out\"} />\n          </div> :\n          <div className={styles.buttonSize}>\n            <Link to=\"/login\">\n              <HeaderButton title={\"Sign In\"} />\n            </Link>\n          </div>\n        }\n      </div>\n      <hr />\n    </>\n  );\n}\n\nexport default Header;\n","import styles from \"./index.module.css\"\nimport { useState } from \"react\"\nimport { useDispatch } from 'react-redux';\nimport { addNewTaskREducer } from \"../../../Redux/ActionsCreator/actions\"\n\nconst NewTask = () => {\n\n  const dispatch = useDispatch()\n\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    email: \"\",\n    taskContent: \"\",\n  })\n\n  function handleChange({ target: { name, value } }) {\n    setInputs({\n      ...inputs,\n      [name]: value\n    })\n  }\n\n  function saveTask(event) {\n    event.preventDefault()\n    dispatch(addNewTaskREducer(inputs))\n  }\n\n  const { username, email, taskContent } = inputs;\n\n  return (\n    <div className={styles.Main}>\n      <div className={styles.TaskBlock}>\n        <div>Add a new task</div>\n        <form onSubmit={saveTask}>\n          <div className={styles.newTaskInput}>\n            <label className={styles.newClassLable} htmlFor={\"email\"} >E-mail: </label>\n            <input onChange={handleChange} required type=\"email\" id=\"email\" size=\"30\" name=\"email\" placeholder=\"enter E-mail\" />\n          </div>\n          <div className={styles.newTaskInput}>\n            <label className={styles.newClassLable} htmlFor={\"username\"} >Username: </label>\n            <input onChange={handleChange} required type=\"text\" id=\"username\" size=\"30\" name=\"username\" placeholder=\"enter Username\" />\n          </div>\n          <div className={styles.newTaskInput}>\n            <label className={styles.newClassLable} htmlFor={\"taskContent\"} >Task: </label>\n            <textarea onChange={handleChange} id=\"taskContent\" name=\"taskContent\" placeholder=\"enter your Task\" cols=\"33\" rows=\"4\"></textarea>\n          </div>\n          <div className={styles.ButtonSize}>\n            <button className=\"btn btn-outline-primary mx-3 w-100\">ADD</button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n  );\n}\n\nexport default NewTask;\n","import { useSelector } from \"react-redux\"\nimport styles from \"./index.module.css\"\n\nconst TaskHeader = ({ setSort_direction, setSort_field }) => {\n  const store = useSelector(store => store.Admin_status)\n\n  function sortUsernameUp() {\n    setSort_direction(\"asc\")\n    setSort_field(\"username\")\n  }\n\n  function sortUsernameDown() {\n    setSort_direction(\"desc\")\n    setSort_field(\"username\")\n  }\n\n  function sortEmailUp() {\n    setSort_direction(\"asc\")\n    setSort_field(\"email\")\n  }\n\n  function sortEmailDown() {\n    setSort_direction(\"desc\")\n    setSort_field(\"email\")\n  }\n\n  function sortStatusUp() {\n    setSort_direction(\"asc\")\n    setSort_field(\"status\")\n  }\n\n  function sortStatusDown() {\n    setSort_direction(\"desc\")\n    setSort_field(\"status\")\n  }\n\n  return (\n    <div className={styles.MainBlock}>\n      <div className={styles.ElementBlockUsername}>\n        <div>Username</div>\n        <div className={styles.SortButtons}>\n          <div onClick={() => { sortUsernameUp() }} >🔼</div>\n          <div onClick={() => { sortUsernameDown() }} >🔽</div>\n        </div>\n      </div>\n      <div className={styles.ElementBlockEmail}>\n        <div>E-mail</div>\n        <div className={styles.SortButtons}>\n          <div onClick={() => { sortEmailUp() }} >🔼</div>\n          <div onClick={() => { sortEmailDown() }} >🔽</div>\n        </div>\n      </div>\n      <div className={styles.ElementBlockTask}>\n        <div>Task</div>\n\n      </div>\n      <div className={styles.ElementBlockStatus}>\n        <div>Status</div>\n        <div className={styles.SortButtons}>\n          <div onClick={() => { sortStatusUp() }} >🔼</div>\n          <div onClick={() => { sortStatusDown() }} >🔽</div>\n        </div>\n      </div>\n\n      {\n        store &&\n        <div className={styles.ElementBlockStatusChange}>\n          <div>Change Status</div>\n        </div>\n      }\n\n    </div>\n  );\n}\nexport default TaskHeader;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./index.module.css\"\nimport { changeTaskStatus, changeTaskText, logoutAdmin } from \"../../../../Redux/ActionsCreator/actions\"\nimport { useHistory } from \"react-router-dom\";\n\nconst Task = (props) => {\n  const store = useSelector(store => store.Admin_status)\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  let textValue = null;\n  if (props.data.text.slice(0, 11) === \"!@#Edited: \") {\n    textValue = props.data.text.slice(11)\n  } else { textValue = props.data.text }\n\n  const [inputs, setInputs] = useState({\n    text: textValue,\n  })\n\n  function handleChange({ target: { name, value } }) {\n    setInputs({\n      ...inputs,\n      [name]: value\n    })\n  }\n\n  async function changeStatus(value) {\n\n    try {\n      const storageRedux = localStorage.getItem(\"redux\")\n      const token = await JSON.parse(storageRedux).Admin_status\n      dispatch(changeTaskStatus(value, token, props.data.id, props.setChangeStatus))\n    } catch (error) {\n      alert(\"Необходима авторизация!\")\n      dispatch(logoutAdmin(false))\n      history.push(\"/login\")\n    }\n\n\n  }\n\n  async function changeText(value) {\n    if (textValue !== text) {\n      try {\n        const storageRedux = localStorage.getItem(\"redux\")\n        const token = await JSON.parse(storageRedux).Admin_status\n        dispatch(changeTaskText(value, token, props.data.id, props.setChangeStatus))\n      } catch (error) {\n        alert(\"Необходима авторизация!\")\n        dispatch(logoutAdmin(false))\n        history.push(\"/login\")\n      }\n    }\n  }\n\n\n  const { text } = inputs\n\n  const status = props.data.status\n\n  return (\n    <div className={styles.MainBlock}>\n      <div className={styles.ElementBlockUsername}>\n        <p>{props.data.username}</p>\n      </div>\n      <div className={styles.ElementBlockEmail}>\n        <p>{props.data.email}</p>\n      </div>\n\n      {\n        store ?\n          <div className={styles.ElementBlockTask}>\n            < input onChange={handleChange} size=\"20\" name=\"text\" value={text} type=\"text\" />\n            <button onClick={() => { changeText(text) }} className=\"btn btn-outline-primary mx-3 w-25\">Save!</button>\n          </div>\n          :\n          <div className={styles.ElementBlockTask}>\n            <p>{textValue}</p>\n          </div>\n      }\n\n      <div className={styles.ElementBlockStatus}>\n        {status === 10 ?\n          <div>Done</div> :\n          <div>Not Done</div>}\n        {store && props.data.text.slice(0, 11) === \"!@#Edited: \" ?\n          <div>Edited</div> :\n          <div></div>\n        }\n      </div>\n\n      {store && (\n        status ?\n          <div className={styles.ButtonSize}>\n            <button onClick={() => { changeStatus(0) }} className=\"btn btn-outline-primary mx-3 w-100\">Undo!</button>\n          </div>\n          :\n          <div className={styles.ButtonSize}>\n            <button onClick={() => { changeStatus(10) }} className=\"btn btn-outline-primary mx-3 w-100\">Done!</button>\n          </div>)\n      }\n\n    </div>\n  );\n}\n\nexport default Task;\n","import styles from \"./index.module.css\"\n\nconst Pagination = ({ value, setPage }) => {\n  return (\n    <div className={styles.ElementBlock}>\n      <p onClick={() => { setPage(value) }} role=\"button\" className=\"active page-link \">{value}</p>\n    </div >\n  );\n}\nexport default Pagination;\n","import Pagination from \"../Pagination/Pagination\"\nimport styles from \"./index.module.css\"\n\nconst PaginationBar = (props) => {\n  const pageCounter = []\n  for (let i = 1; i <= props.value; i += 1) {\n    pageCounter.push(i)\n  }\n\n  return (\n    <div className={styles.MainBlock}>\n      {pageCounter.map((el) => <Pagination key={el} value={el} setPage={props.setPage} />)}\n    </div>\n  );\n}\nexport default PaginationBar;\n","import styles from \"./index.module.css\"\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveTask } from \"../../../Redux/ActionsCreator/actions\"\nimport TaskHeader from \"./TaskHeader/TaskHeader\";\nimport Task from \"./Task/Task\";\nimport PaginationBar from \"./PaginationBar/PaginationBar\";\n\n\nconst TasksBlock = () => {\n  const addNewTask = useSelector(state => state.addNewTask)\n\n  const [page, setPage] = useState(1)\n  const [sort_field, setSort_field] = useState(\"username\")\n  const [sort_direction, setSort_direction] = useState(\"asc\")\n  const [allPages, setAllPages] = useState(\"\")\n  const [changeStatus, setChangeStatus] = useState(\"\")\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(`https://uxcandy.com/~shapoval/test-task-backend/v2/?page=${page}&developer=PapakhinAV&sort_direction=${sort_direction}&sort_field=${sort_field}`, {\n      })\n      const result = await response.json()\n      console.log(result);\n      if (result.status === \"ok\") {\n        setAllPages(Math.ceil(result.message.total_task_count / 3))\n        dispatch(saveTask(result.message.tasks))\n      }\n    })()\n  }, [page, sort_field, sort_direction, addNewTask, changeStatus])\n\n  const store = useSelector(state => state.Tasks)\n\n  return (\n    <div className={styles.Main}>\n      <div className={styles.TaskBlock}>\n        <TaskHeader setSort_field={setSort_field} setSort_direction={setSort_direction} />\n        {store.map((el) => {\n          return <Task key={el.id} setChangeStatus={setChangeStatus} data={el} />\n        })}\n        <PaginationBar value={allPages} setPage={setPage} />\n      </div>\n    </div>\n  );\n}\n\nexport default TasksBlock;\n","import styles from \"./index.module.css\"\nimport NewTask from \"./New_task/New_task\"\nimport TasksBlock from \"./TasksBlock/TasksBlock\"\n\n\nconst MainPage = () => {\n\n  return (\n    <div className={styles.MainBlock}>\n      <NewTask />\n      <TasksBlock />\n    </div>\n  );\n}\n\nexport default MainPage;\n","import styles from \"./index.module.css\"\nimport { useState } from \"react\"\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { changeAdminStatus } from \"../../Redux/ActionsCreator/actions\"\n\nconst Login = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    email: \"\",\n    taskContent: \"\",\n  })\n\n  function handleChange({ target: { name, value } }) {\n    setInputs({\n      ...inputs,\n      [name]: value\n    })\n  }\n\n  const { username, password } = inputs;\n\n  async function authorization(event) {\n    const formData = new FormData()\n    formData.append(\"username\", username)\n    formData.append(\"password\", password)\n    event.preventDefault()\n    const response = await fetch('https://uxcandy.com/~shapoval/test-task-backend/v2/login?developer=PapakhinAV', {\n      method: 'POST',\n      body: formData\n    })\n    const result = await response.json()\n    if (result.status === \"ok\") {\n      dispatch(changeAdminStatus(result.message.token))\n      history.push(\"/\")\n    }\n    else {\n      alert(\"Введен неверный логин или пароль\")\n    }\n\n  }\n\n  return (\n    <div className={styles.Main}>\n      <div className={styles.TaskBlock}>\n        <div></div>\n        <form onSubmit={authorization}>\n          <div className={styles.newTaskInput}>\n            <label className={styles.newClassLable} htmlFor={\"username\"} >Username: </label>\n            <input onChange={handleChange} required type=\"text\" id=\"username\" size=\"30\" name=\"username\" placeholder=\"enter Username\" />\n          </div>\n          <div className={styles.newTaskInput}>\n            <label className={styles.newClassLable} htmlFor={\"password\"} >Password </label>\n            <input onChange={handleChange} required type=\"password\" id=\"password\" size=\"30\" name=\"password\" placeholder=\"enter Password\" />\n          </div>\n          <div className={styles.ButtonSize}>\n            <button className=\"btn btn-outline-primary mx-3 w-100\">Sign In</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import Header from './Components/Header/Header';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport MainPage from './Components/MainPage/MainPage';\nimport Login from './Components/Login/Login';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <MainPage />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n    </>\n  );\n}\n\nexport default App;\n","\nconst initialState = () => {\n  const initialValue = {\n    Tasks: [],\n    Admin_status: false,\n    addNewTask: \"\",\n  }\n  return JSON.parse(localStorage.getItem('redux')) || initialValue\n}\n\nexport default initialState;\n","import * as TYPES from '../Types/types';\n\nconst Admin_statusReducer = (state = false, action) => {\n  switch (action.type) {\n    case TYPES.CHANGE_ADMIN_STATUS:\n      return (action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default Admin_statusReducer;\n","import * as TYPES from '../Types/types';\n\nconst taskReduser = (state = [], action) => {\n  switch (action.type) {\n    case TYPES.ADD_NEW_TASK:\n      return [...action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReduser;\n","import * as TYPES from '../Types/types';\n\nconst addNewTaskReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case TYPES.ADD_NEW_TASK_CONTROLLER:\n      return (action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default addNewTaskReducer;\n","import { combineReducers } from 'redux';\nimport Admin_statusReducer from './Admin_statusReducer';\nimport taskReduser from \"./taskReduser\"\nimport addNewTaskReducer from \"./addNewTaskReducer\"\n\n\n\nconst rootReducer = combineReducers({\n  Tasks: taskReduser,\n  Admin_status: Admin_statusReducer,\n  addNewTask: addNewTaskReducer,\n\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport initState from './initState';\nimport rootReducer from './Reducers/rootReducer';\n\n\nconst store = createStore(rootReducer, initState(), composeWithDevTools(applyMiddleware(thunk)));\n\nstore.subscribe(() => {\n  localStorage.setItem('redux', JSON.stringify(store.getState()))\n})\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./Redux/store\"\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}